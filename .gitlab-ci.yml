image: r.j3ss.co/img

variables:
  GO_VERSION: "1.18"

stages:
  - test
  - semantic
  - build
  - deploy

test:
  stage: test
  image: golang:${GO_VERSION}
  script:
    - echo $CI_COMMIT_BRANCH
    - echo $CI_DEFAULT_BRANCH
    - echo $CI_COMMIT_SHA
    - cd src/
    - go mod download
    - go test -race -v ./...
  except:
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^chore\\(release\\)\\:.*/"

semantic:
  stage: semantic
  image: registry.crudus.no/docker/semantic-release-gitlab:latest
  script:
    - echo $CI_COMMIT_MESSAGE
    - export PREV_TAG=$(git describe --tags --always)
    - semantic-release -e @crudus/semantic-release-config
    - export NEW_TAG=$(git describe --tags --always)
    - if [ "$PREV_TAG" != "$NEW_TAG" ]; then echo "Tag changed from $PREV_TAG to $NEW_TAG";
      echo "HAS_RELEASE=TRUE" >> build.env; fi
    - echo "CI_SEMANTIC_RELEASE_TAG=$(git describe --tags --always)" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  only:
    - master
  except:
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^chore\\(release\\)\\:.*/"

build:
  stage: build
  before_script:
    - img login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
  script:
    - cat "$DEFAULT_APP_CONFIG" > testdata/defaults/config.json
    - img build -t "$CI_REGISTRY_IMAGE:latest" .
    - img tag "$CI_REGISTRY_IMAGE:latest" "$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG//v}"
    - img push "$CI_REGISTRY_IMAGE"
    - img push "$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG//v}"
  only:
    - tags